@model Sagromin.ViewModels.Local._AddEditLocalViewModel

@{
    Layout = ConstantHelpers.LAYOUT.MODAL_LAYOUT_PATH;
    ViewBag.Title = Model.LocalId.HasValue ? "Editar Local" : "Agregar Local";
    ViewBag.ModalIcon = "fa fa-building";
    ViewBag.Form = new ModalFormHelpers("_AddEditLocal", "Local", FormMethod.Post, new { id = "fmrs" });
    ViewBag.ModalSize = "lg";
}

<style>
    .select2-dropdown {
        z-index: 999999;
    }

    .select2.select2-container.select2-container--default.select2-container--below {
        width: 100% !important;
    }

    .select2.select2-container.select2-container--default {
        width: 100% !important;
    }
</style>

@Html.HiddenFor(x=>x.LocalId)
<div class="col-lg-12">
    <div class="card">
        <div class="card-body row">
            @*<form class="needs-validation" novalidate>*@
            <div class="col-md-6 mb-3">
                <label for="" class=" col-form-label">@Html.LabelFor(x => x.Name)<span class="text-danger">*</span></label>
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "Nombre" })
                <div class="valid-tooltip">
                    Looks good!
                </div>
                <div class="invalid-tooltip">
                    Please enter first name.
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <label for="" class="col-form-label">@Html.LabelFor(x => x.Phone)<span class="text-danger">*</span></label>
                @Html.TextBoxFor(x => x.Phone, new { @class = "form-control onlyCelularPeru", placeholder = "Celular" })
                <div class="invalid-tooltip">
                    Please provide a valid zip.
                </div>
            </div>
            <div class="col-md-6 mb-3">
                @Html.HiddenFor(x => x.DepartmentIdHidden, new { @class = "department" })
                <label for="" class="col-form-label">@Html.LabelFor(x => x.DepartmentId)<span class="text-danger">*</span></label>
                @Html.DropDownListFor(x => x.DepartmentId, new SelectList(Model.LstDepartment, "DepartmentId", "Name"), "Departamento", new { @class = "departmentSelect" })
                @*<select name="" id="" class="DepartmentId" value=""></select>*@
                <div class="invalid-tooltip">
                    Please provide a valid state.
                </div>
            </div>
            <div class="col-md-6 mb-3">
                @Html.HiddenFor(x => x.ProvinceIdHidden, new { @class = "province" })
                <label for="" class="col-form-label">@Html.LabelFor(x => x.ProvinceId)<span class="text-danger">*</span></label>
                @Html.DropDownListFor(x => x.ProvinceId, new SelectList(Model.LstProvince, "ProvinceId", "Name"), "Provincia", new { @class = "provinceSelect" })
                <div class="invalid-tooltip">
                    Please provide a valid state.
                </div>
            </div>
            <div class="col-md-6 mb-3">
                @Html.HiddenFor(x => x.DistrictIdHidden, new { @class = "district" })
                <label for="" class="col-form-label">@Html.LabelFor(x => x.DistrictId)<span class="text-danger">*</span></label>
                @Html.DropDownListFor(x => x.DistrictId, new SelectList(Model.LstDistrict, "DistrictId", "Name"), "Distrito", new { @class = "districtSelect" })
                <div class="invalid-tooltip">
                    Please provide a valid state.
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <label for="" class="col-form-label">@Html.LabelFor(x => x.Address)<span class="text-danger">*</span></label>
                @Html.TextBoxFor(x => x.Address, new { @class = "form-control", placeholder = "Dirección" })
                <div class="invalid-tooltip">
                    Please provide a valid zip.
                </div>
            </div>
            @*</form>*@
        </div>
    </div>
</div>



@section Footer{
    <button class="btn btn-success btn-xs" type="submit"><i class="fe-save"></i> Guardar</button>
}

@section Scripts{
    <script>
        var departmentSelect2 = null;
        var provinceSelect2 = null;
        var districtSelect2 = null;

        $(document).ready(function () {

            departmentSelect2 = $('.departmentSelect');
            provinceSelect2 = $('.provinceSelect');
            districtSelect2 = $('.districtSelect');

            select2Call('Sex');

            departmentSelect2.select2({
                placeholder: 'Departamento',
                allowClear: true,
                dataType: 'json',
                quietMillis: 100,
                //minimumInputLength: 1,
                ajax: {
                    url: '@Url.Action("_GetDepartment", "Service")',
                    data: function (params) {
                        return { filtro: params.term };
                    },
                    processResults: function (data) {
                        return { results: data };
                    }

                }
            });

            provinceSelect2.select2({
                placeholder: 'Provincia',
                allowClear: true,
                dataType: 'json',
                quietMillis: 100,
                minimumInputLength: 1,
                ajax: {
                    url: '@Url.Action("_GetProvince", "Service")',
                    data: function (params) {
                        return { filtro: params.term, parameterId: $('.departmentSelect').val() };
                    },
                    processResults: function (data) {
                        return { results: data };
                    }

                }
            });
            districtSelect2.select2({
                placeholder: 'Distrito',
                allowClear: true,
                dataType: 'json',
                quietMillis: 100,
                minimumInputLength: 1,
                ajax: {
                    url: '@Url.Action("_GetDistrict", "Service")',
                    data: function (params) {
                        return { filtro: params.term, parameterId: $('.provinceSelect').val() };
                    },
                    processResults: function (data) {
                        return { results: data };
                    }

                }
            });
            $('.select2-container').prop('class', 'select2 select2-container select2-container--default select2-container--above');

             if ($('.department').val() != null)
            {
                let departmentId = $('.department').val();
                $.ajax({
                    method: 'GET',
                    url: '@Url.Action("_GetDepartment", "Service")',
                    dataType: 'json',
                    data: { parameterId2: departmentId },
                }).then(function (data) {
                    var option = new Option(data[0].text, data[0].id, true, true);
                    departmentSelect2.append(option).trigger('change');
                    departmentSelect2.trigger({
                        type: 'select2:select',
                        params: {
                            data: data
                        }
                    });
                });
            }

            if ($('.province').val() != null)
            {
                let provinceId = $('.province').val();
                $.ajax({
                    method: 'GET',
                    url: '@Url.Action("_GetProvince", "Service")',
                    dataType: 'json',
                    data: { parameterId2: provinceId },
                }).then(function (data) {
                    var option = new Option(data[0].text, data[0].id, true, true);
                    provinceSelect2.append(option).trigger('change');
                    provinceSelect2.trigger({
                        type: 'select2:select',
                        params: {
                            data: data
                        }
                    });
                });
            }

            if ($('.district').val() != null)
            {

                let districtId = $('.district').val();
                 $.ajax({
                     method: 'GET',
                     url: '@Url.Action("_GetDistrict", "Service")',
                     dataType: 'json',
                     data: { parameterId2: districtId },
                }).then(function (data) {
                    var option = new Option(data[0].text, data[0].id, true, true);
                    districtSelect2.append(option).trigger('change');
                    districtSelect2.trigger({
                        type: 'select2:select',
                        params: {
                            data: data
                        }
                    });
                });
            }
        });
        
    </script>
}