@model Sagromin.ViewModels.Product._AddEditProductViewModel

@{
    Layout = ConstantHelpers.LAYOUT.MODAL_LAYOUT_PATH;
    ViewBag.Title = Model.ProductId.HasValue ? "Editar Producto" : "Agregar Producto";
    ViewBag.ModalIcon = "fa fa-building";
    ViewBag.Form = new ModalFormHelpers("_AddEditProduct", "Product", FormMethod.Post, new { id = "fmrs" });
    ViewBag.ModalSize = "md";
}

<style>
    .select2-dropdown {
        z-index: 999999;
    }

    .select2.select2-container.select2-container--default.select2-container--below {
        width: 100% !important;
    }

    .select2.select2-container.select2-container--default {
        width: 100% !important;
    }
</style>

@Html.HiddenFor(x => x.ProductId)
<div class="col-lg-12">
    <div class="card">
        <div class="card-body row">
            @*<form class="needs-validation" novalidate>*@

            <div class="col-md-12 mb-3">
                <label for="" class=" col-form-label">@Html.LabelFor(x => x.Name)<span class="text-danger">*</span></label>
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "Nombre" })
                <div class="valid-tooltip">
                    Looks good!
                </div>
                <div class="invalid-tooltip">
                    Please enter first name.
                </div>
            </div>
            @*</form>*@
        </div>
    </div>
</div>



@section Footer{
    <button class="btn btn-success btn-xs" type="submit"><i class="fe-save"></i> Guardar</button>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            select2Call('LocalId');
            $('.select2-container').prop('class', 'select2 select2-container select2-container--default select2-container--above');
        });
    </script>
}